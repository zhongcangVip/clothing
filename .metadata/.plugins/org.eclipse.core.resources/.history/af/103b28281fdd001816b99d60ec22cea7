package com.clothing.controller.item;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.clothing.common.ResultUtil;
import com.clothing.controller.base.BaseController;
import com.clothing.model.base.Pagination;
import com.clothing.model.base.Result;
import com.clothing.model.item.Item;
import com.clothing.model.vo.PaginationCondition;
import com.clothing.model.vo.item.ItemSearchVo;
import com.clothing.service.ItemService;

@Controller
@RequestMapping(value="item")
public class ItemController extends BaseController{
	
	@Autowired
	private ItemService itemService;
	

	@RequestMapping(value="list")
	public String index(){
		return "item/itemList";
	}
	
	
	@RequestMapping(value="listData")
	@ResponseBody
	public Pagination<Item> listData(@Validated PaginationCondition<Map<String,Object>> condition){
		return this.itemService.getItemByPagination(condition.getPage(), condition.getPageSize(), condition.getCondition());
	}
	
	@RequestMapping(value="addOrEdit")
	public String addOrEdit(ModelMap model,@PathVariable String id){
		if(StringUtils.isNotBlank(id)){
			Item item=this.itemService.getItemById(id);
			model.put("item", item);
		}
		return "";	
	}
	
	
	@RequestMapping(value="submit")
	@ResponseBody
	public Result submit(@Validated Item item){
		
		return ResultUtil.success();
	}
	
	
	@RequestMapping(value="toView")
	public String toView(ModelMap model,@PathVariable String id){
		if(StringUtils.isNotBlank(id)){
			Item item=this.itemService.getItemById(id);
			model.put("item", item);
		}
		return "";
	}
	
	
}
