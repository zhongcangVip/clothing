package com.clothing.controller.item;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.clothing.common.ResultUtil;
import com.clothing.controller.base.BaseController;
import com.clothing.model.base.Pagination;
import com.clothing.model.base.Result;
import com.clothing.model.base.enums.StatusEnum;
import com.clothing.model.item.ItemUnit;
import com.clothing.service.ItemUnitService;
import com.mysql.jdbc.StringUtils;

/**
 * 商品单位相应信息处理
 * @author yangmin
 * @date  2018年9月27日
 */
@Controller
@RequestMapping(value="itemUnit")
public class ItemUnitController extends BaseController {
	private static final Logger logger=LoggerFactory.getLogger(ItemUnitController.class);
	@Autowired
	private ItemUnitService unitService;
	
	@GetMapping(value="list")
	public String list(){
		return "item/itemUnitList";
	}
	
	@PostMapping(value="listData")
	@ResponseBody
	public Pagination<ItemUnit> listData(){
		String page=this.getString("page","1");
		String pageSize=this.getString("pageSize","20");
		String code=this.getString("code");
		String name=this.getString("name");
		String status=this.getString("status");
		Map<String,Object> params=new HashMap<String,Object>();
		params.put("code", code);
		params.put("name", name);
		params.put("status", status);
		Pagination<ItemUnit> pagination=this.unitService.getItemUnitByPagination(params, Integer.valueOf(page), Integer.valueOf(pageSize));
		return pagination;
	}
	
	/**
	 * 下拉框取数
	 * @return
	 */
	@RequestMapping(value="getStatus")
	@ResponseBody
	public Map<String,Object> getItemUnitStatus(){
		Map<String,Object> resultMap=new HashMap<String,Object>();
		StatusEnum[] ary=StatusEnum.values();
		return resultMap;
	}
	
	@GetMapping(value="toAddOrEdit")
	public String toAddOrEdit(ModelMap model){
		String id=this.getString("id");
		if(!StringUtils.isNullOrEmpty(id)){
			ItemUnit info=this.unitService.getItemUnitById(id);
			model.put("itemUnit", info);
		}
		return "item/itemUnitInfo";
	}

	@RequestMapping(value="submit")
	@ResponseBody
	public Result submit(){
		String id=this.getString("id");
		String code=this.getString("code");
		String name=this.getString("name");
		String description=this.getString("description");
		ItemUnit info=this.unitService.getItemUnitById(id);
		if(info==null){
			info=new ItemUnit();
		}
		info.setName(name);
		info.setCode(code);
		info.setDescription(description);
		info.setLastUpdateTime(new Date());
		if(id!=null && id.length()>0){
			this.unitService.updateItemUnit(info);
		}else{
			this.unitService.insertItemUnit(info);
		}
		return ResultUtil.success();
	}
	/**
	 * 查看
	 * @param model
	 * @return
	 */
	@RequestMapping(value="toView")
	public String toView(ModelMap model){
		String id=this.getString("id");
		if(!StringUtils.isNullOrEmpty(id)){
			ItemUnit info=this.unitService.getItemUnitById(id);
			model.put("itemUnit", info);
		}
		model.put("openModel", "view");
		return "item/itemUnitInfo";
	}
	/**
	 * 状态修改
	 * @return
	 */
	@RequestMapping(value="updateStatus")
	@ResponseBody
	public Result updateStatus(){
		String id=this.getString("id");
		String status=this.getString("status");
		ItemUnit info=this.unitService.getItemUnitById(id);
		if(info!=null){
			info.setStatus(StatusEnum.valueOf(status));
		}else{
			return ResultUtil.error();
		}
		this.unitService.updateItemUnit(info);
		return ResultUtil.success();
	}

}
